(()=>{var e={577:e=>{"use strict";e.exports=require("cors")},252:e=>{"use strict";e.exports=require("express")},383:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("mongoose")},461:e=>{"use strict";e.exports=require("multer")},3:e=>{"use strict";e.exports=require("path")}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var s=n[o]={exports:{}};return e[o](s,s.exports,t),s.exports}const o=t(37),a=t(252),s=t(577),r=t(461),i=t(383),d=t(3);o.connect("mongodb+srv://rudradeysarkar2002:Rudra9595@college-erp-system.2y8uzyb.mongodb.net/College-ERP-System?retryWrites=true&w=majority",{useNewUrlParser:!0,useUnifiedTopology:!0}).then((function(){console.log("DB Connected")})).catch((function(e){console.log(e)}));const l=a();l.use(a.json()),l.use(s()),l.use(a.urlencoded({extended:!1}));const c=new o.Schema({user:String,name:String,email:String,password:String,streamordep:String,gender:String}),u=o.model("collection",c),p=r.diskStorage({destination:function(e,n,t){t(null,"./upload-notice")},filename:function(e,n,t){Date.now(),Math.round(1e9*Math.random()),t(null,`${n.originalname}`)}}),m=r({storage:p});l.post("/upload-notice",m.single("pdfnoticeupload"),((e,n)=>{n.json("File Uploaded")}));const f=r.diskStorage({destination:function(e,n,t){t(null,"./upload-attendance")},filename:function(e,n,t){Date.now(),Math.round(1e9*Math.random()),t(null,`${n.originalname}`)}}),g=r({storage:f});l.post("/upload-attendance",g.single("pdfattendanceupload"),((e,n)=>{n.json("File Uploaded")}));const j=d.join(__dirname,"upload-notice");l.get("/download-notice",((e,n)=>{i.readdir(j,((e,t)=>{if(e)return void n.status(500).json({error:"Failed to read directory"});const o=t.filter((e=>e.endsWith(".pdf")));n.json(o)}))})),l.get("/download-notice/:filename",((e,n)=>{const t=e.params.filename,o=d.join(j,t);n.download(o,(e=>{e&&n.status(500).json({error:"Failed to download file"})}))}));const y=d.join(__dirname,"upload-attendance");l.get("/download-attendance",((e,n)=>{i.readdir(y,((e,t)=>{if(e)return void n.status(500).json({error:"Failed to read directory"});const o=t.filter((e=>e.endsWith(".pdf")));n.json(o)}))})),l.get("/download-attendance/:filename",((e,n)=>{const t=e.params.filename,o=d.join(y,t);n.download(o,(e=>{e&&n.status(500).json({error:"Failed to download file"})}))})),l.post("/login",(async(e,n)=>{const{user:t,email:o,password:a}=e.body;try{(await u.find({user:t,email:o,password:a})).length>0?n.json("exist"):n.json("notexist")}catch(e){n.json("fail")}})),l.get("/healthcheck",(async(e,n)=>{n.json("college-erp-system-backend functional")})),l.post("/getdata",(async(e,n)=>{const{email:t,password:o}=e.body;try{(await u.find({email:t,password:o})).length>0?u.find({email:t}).then((e=>n.json(e))).catch((e=>n.json({error:e.message}))):n.json("notexist")}catch(e){n.json("fail")}})),l.get("/getsfdata",((e,n)=>{try{u.find().then((e=>n.json(e))).catch((e=>n.json({error:e.message})))}catch(e){n.json("fail")}})),l.post("/signup",(async(e,n)=>{const{name:t,email:o,password:a,user:s,streamordep:r,gender:i}=e.body,d={user:s,name:t,email:o,password:a,streamordep:r,gender:i};try{const e=await u.findOne({email:o});null===e||e.length<=0?(n.json("notexist"),await u.insertMany([d])):n.json("exist")}catch(e){n.json("fail")}})),l.put("/update",(async(e,n)=>{const{email:t,name:o}=e.body.data;if(!t)return n.json("Email is required");try{await u.findOneAndUpdate({email:t},{name:o},{new:!0})?n.json("User name updated."):n.json("User name not updated.")}catch(e){n.json("Internal server error "+e)}})),l.delete("/delete",(async(e,n)=>{const t=e.body.email;if(t)try{await u.findOneAndDelete({email:t})?n.json("Data Deleted"):n.json("Data Not Deleted Due To An Error")}catch(e){n.json(e+" Server Error")}else n.json("email not exist")})),l.listen(5001,(function(){console.log("Port is active")}))})();
//# sourceMappingURL=server.js.map